@model Model.EF.Blog

@{
    ViewBag.Title = "Update";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}



@section breadcrumb {
    <div class="container-fluid">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb my-0 ms-2">
                <li class="breadcrumb-item">
                    <!-- if breadcrumb is single-->
                    <span>Blog</span>
                </li>
                <li class="breadcrumb-item active"><span>Chỉnh sửa</span></li>
            </ol>
        </nav>
    </div>
}


<script src="~/Scripts/ckfinder/ckfinder.js"></script>
<script src="~/Scripts/ckeditor/ckeditor.js"></script>

<div class="tab-content rounded-bottom">
    <div class="tab-pane p-3 active preview" role="tabpanel" id="preview-907">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Chỉnh sửa Blog</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="tab-content rounded-bottom">
                    <div class="tab-pane p-3 active preview" role="tabpanel" id="preview-644">
                        <form>
                            <div class="input-group mb-3">
                                <label class="col-sm-2 col-form-label" for="urlAnh">Ảnh Blog</label>
                                <div class="col-sm-10">
                                    <div class="input-group mb-3" onclick="BrowserSever()" style="cursor: pointer;">
                                        <span class="input-group-text" id="basic-addon3">Upload</span>
                                        <input class="form-control" id="urlAnh" type="text" aria-describedby="basic-addon3" name="urlImage" value="@Model.UrlImage">
                                    </div>
                                </div>

                            </div>
                            <div class="input-group mb-3">
                                <label class="col-sm-2 col-form-label" for="tieude">Tiêu đề</label>
                                <div class="col-sm-10">
                                    <input class="form-control" id="tieude" type="text" name="TieuDe" value="@Model.TieuDe">
                                </div>
                            </div>
                            <div class="input-group mb-3">
                                <label class="col-sm-2 col-form-label" for="exampleFormControlTextarea1">Mô tả</label>
                                <div class="col-sm-10">
                                    <textarea class="form-control" id="exampleFormControlTextarea1" rows="3" name="MoTa">@Model.MoTa</textarea>
                                </div>

                            </div>
                            @*Nội dung*@
                            <div class="input-group mb-3">
                                <label class="col-sm-2 col-form-label" for="noidung">Nội dung</label>
                                <div class="col-sm-10">
                                    <textarea class="form-control ckeditor" name="noidung" id="noidung" rows="3">@Model.NoiDung</textarea>
                                </div>
                            </div>
                                <button class="btn btn-primary" type="submit" value="Update">Chỉnh sửa</button>

                        </form>
                    </div>
                </div>
            </div>
        }

    </div>
</div>

<script>
    //Handle thêm CKEDITOR
    CKEDITOR.replace("ckeditor");

    //Handle thêm CKFINDER
    function BrowserSever() {
        var finder = new CKFinder();
        finder.selectActionFunction = GanUrl;
        finder.popup();
    }

    function GanUrl(url) {
        console.log(url);
        $("#urlAnh").val(url);

    }

</script>

@*<h2>Update</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Blog</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.TieuDe, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TieuDe, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TieuDe, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NoiDung, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NoiDung, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoiDung, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaND, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaND, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaND, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UrlImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UrlImage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UrlImage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
